UDPserver:

import java.io.IOException; 
import java.net.DatagramPacket; 
import java.net.DatagramSocket; 
import java.net.InetAddress; 
import java.net.SocketException; 
public class server2 
{ 
	public static void main(String[] args) throws IOException 
	{ 
		DatagramSocket ds = new DatagramSocket(1234); 
		byte[] receive = new byte[65535]; 

		DatagramPacket DpReceive = null; 
		while (true) 
		{ 
			DpReceive = new DatagramPacket(receive, receive.length); 
			ds.receive(DpReceive); 

			System.out.println("Client: " + data(receive)); 
			if (data(receive).toString().equals("quit")) 
			{ 
				System.out.println("Server : Client sent quit.....EXITING"); 
				break; 
			} 
			int d = data(receive).length();
			System.out.println("Server: " + d);
			receive = new byte[65535]; 
		} 
	} 
	public static StringBuilder data(byte[] a) 
	{ 
		if (a == null) 
			return null; 
		StringBuilder ret = new StringBuilder(); 
		int i = 0; 
		while (a[i] != 0) 
		{ 
			ret.append((char) a[i]); 
			i++; 
		} 
		return ret; 
	} 
} 


UDPclient:

import java.io.IOException; 
import java.net.DatagramPacket; 
import java.net.DatagramSocket; 
import java.net.InetAddress; 
import java.util.Scanner; 

public class client2 
{ 
	public static void main(String args[]) throws IOException 
	{ 
		Scanner sc = new Scanner(System.in); 
		DatagramSocket ds = new DatagramSocket(); 
		InetAddress ip = InetAddress.getLocalHost(); 
		byte buf[] = null; 
		while (true) 
		{ 
			String inp = sc.nextLine(); 
			buf = inp.getBytes(); 
			DatagramPacket DpSend = new DatagramPacket(buf, buf.length, ip, 1234); 
			ds.send(DpSend); 
			if (inp.equals("quit")) 
				break; 
		} 
	} 
}
